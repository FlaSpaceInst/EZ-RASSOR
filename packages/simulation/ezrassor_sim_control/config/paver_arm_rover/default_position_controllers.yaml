joint_state_controller:
  type: joint_state_controller/JointStateController
  publish_rate: 50

arm_back_velocity_controller:
  type: velocity_controllers/JointVelocityController
  joint: arm_back_hinge
  pid: {p: 100.0, i: 0.01, d: 10.0}
drum_back_velocity_controller:
  type: velocity_controllers/JointVelocityController
  joint: drum_back_hinge
  pid: {p: 100.0, i: 0.01, d: 10.0}

# Paver arm controller using the joint trajectory controller
paver_arm_controller:
  type: position_controllers/JointTrajectoryController
  joints:
  - joint1
  - joint2
  - joint3
  - joint4
  - joint5

  constraints:
    goal_time: 0.5
    stopped_velocity_tolerance: 0.02
    joint1:
      trajectory: 0.05
      goal: 0.02
    joint2:
      trajectory: 0.05
      goal: 0.02
    joint3:
      trajectory: 0.05
      goal: 0.02
    joint4:
      trajectory: 0.05
      goal: 0.02
    joint5:
      goal: 0.01
  gains:
    joint1: {p: 100, d: 1, i: 1, i_clamp: 1}
    joint2: {p: 100, d: 1, i: 1, i_clamp: 1}
    joint3: {p: 100, d: 1, i: 1, i_clamp: 1}
    joint4: {p: 100, d: 1, i: 1, i_clamp: 1}
    joint5: {p: 100, d: 1, i: 1, i_clamp: 1}
  stop_trajectory_duration: 0.5
  state_publish_rate: 25
  action_monitor_rate: 10


# PA_first_joint_position_controller:
#  type: position_controllers/JointPositionController
#  joint: joint1
#  pid: {p: 100.0, i: 0.01, d: 10.0}
#PA_second_joint_position_controller:
#  type: position_controllers/JointPositionController
#  joint: joint2
#  pid: {p: 100.0, i: 0.01, d: 10.0}
#PA_third_joint_position_controller:
#  type: position_controllers/JointPositionController
#  joint: joint3
#  pid: {p: 100.0, i: 0.01, d: 10.0}
#PA_fourth_joint_position_controller:
#  type: position_controllers/JointPositionController
#  joint: joint4
#  pid: {p: 100.0, i: 0.01, d: 10.0}
#PA_fifth_joint_position_controller:
#  type: position_controllers/JointPositionController
#  joint: joint5
#  pid: {p: 100.0, i: 0.01, d: 10.0}
PA_claw_velocity_controller:
  type: effort_controllers/JointGroupEffortController
  joints: 
    - grabber_joint1
    - grabber_joint2
  pid: {p: 10.0, i: 0.00, d: 0.0}
#PA_claw_velocity_controller:
#  type: velocity_controllers/JointGroupVelocityController
#  joints: [grabber1, grabber2]
#  pid: {p: 100.0, i: 0.01, d: 10.0}


# Allow for diff drive kinematics, one Twist command for all wheels and get odom for free
diff_drive_controller:
  type: diff_drive_controller/DiffDriveController

  # Joints for each wheel
  left_wheel: [ 'left_wheel_front_hinge', 'left_wheel_back_hinge' ]
  right_wheel: [ 'right_wheel_front_hinge', 'right_wheel_back_hinge' ]

  # Separation between a left and right wheel in meters
  wheel_separation: 0.4

  wheel_radius: 0.18

  # Setting the timeout to INT_MAX (~68 years) until we can migrate all of our
  # controllers to publish commands continuously instead of discretely.
  cmd_vel_timeout: 2147483647

  # Publish the odometry to separate topic or not; false to work w/ Kalman Filter
  enable_odom_tf: false

  # Default covariance values from example on diff drive controller wiki
  pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
  twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]

  # Frame of rover
  base_frame_id: base_link

  # The ratio of max acc and max vel is same as skid steer example in diff drive controlller wiki
  linear:
    x:
      has_velocity_limits    : true

      # Actual speed of rover is 1 meter per 3 secs, so this is sped up
      max_velocity           : 1.0  # m/s

      # Match backwards speed cap
      min_velocity           : -1.0 # m/s

      has_acceleration_limits: true
      max_acceleration       : 1.0  # m/s^2
      min_acceleration       : -1.0 # m/s^2

  # Could also include for constraints for angular but linear caps ensure rover doesn't rotate too fast
