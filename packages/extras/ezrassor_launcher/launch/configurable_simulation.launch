<?xml version="1.0" encoding="UTF-8"?>
<!-- Launch a Gazebo simulation and populate the simulation with EZ-RASSORs!
     Written by Tiger Sachse. -->
<launch>
  <arg name="control_methods"/>
  <arg name="robot_count" default="1"/>
  <arg name="ports" default="default"/>
  <arg name="joysticks" default="default"/>
  <arg name="spawn_x_coords" default="default"/>
  <arg name="spawn_y_coords" default="default"/>
  <arg name="spawn_z_coords" default="default"/>
  <arg name="digsite_x_coords" default="default"/>
  <arg name="digsite_y_coords" default="default"/>
  <arg name="world" default="default"/>
  <arg name="debug" default="default"/>
  <arg name="paused" default="default"/>
  <arg name="verbose" default="default"/>
  <arg name="show_gui" default="default"/>
  <arg name="recording" default="default"/>
  <arg name="use_sim_time" default="default"/>
  <arg name="enable_cameras" default="default"/>
  <arg name="enable_real_odometry" default="default"/>

  <!-- Launch the communication system for a simulated robot. -->
  <group ns="ezrassor$(arg robot_count)">
    <include file="$(find ezrassor_launcher)/launch/configurable_communication.launch">
      <arg name="control_methods" value="$(arg control_methods)"/>
      <arg name="port"
           value="$(eval str(ports).split()[robot_count - 1])"
           unless="$(eval ports == 'default')"/>
      <arg name="joystick"
           value="$(eval str(joysticks).split()[robot_count - 1])"
           unless="$(eval joysticks == 'default')"/>
      <arg name="digsite_x_coord"
           value="$(eval str(digsite_x_coords).split()[robot_count - 1])"
           unless="$(eval digsite_x_coords == 'default')"/>
      <arg name="digsite_y_coord"
           value="$(eval str(digsite_y_coords).split()[robot_count - 1])"
           unless="$(eval digsite_y_coords == 'default')"/>
      <arg name="enable_cameras" value="$(arg enable_cameras)"/>
      <arg name="enable_real_odometry" value="$(arg enable_real_odometry)"/>
    </include>

    <!-- Spawn the model. -->
    <include file="$(find ezrassor_sim_description)/launch/model.launch">
      <arg name="model_id" value="$(arg robot_count)"/>
      <arg name="spawn_x_coord"
           value="$(eval str(spawn_x_coords).split()[robot_count - 1])"
           unless="$(eval spawn_x_coords == 'default')"/>
      <arg name="spawn_y_coord"
           value="$(eval str(spawn_y_coords).split()[robot_count - 1])"
           unless="$(eval spawn_y_coords == 'default')"/>
      <arg name="spawn_z_coord"
           value="$(eval str(spawn_z_coords).split()[robot_count - 1])"
           unless="$(eval spawn_z_coords == 'default')"/>
    </include>

    <!-- Launch the model controls. -->
    <include file="$(find ezrassor_sim_control)/launch/model_controls.launch"/>
  </group>

  <!-- If the final robot has been spawned, load up an empty world. Any arguments
       marked as 'default' are ignored and the defaults within the gazebo launch
       file are used. -->
  <include file="$(find ezrassor_sim_gazebo)/launch/gazebo.launch"
           if="$(eval robot_count == 1)">
    <arg name="world"
         value="$(arg world)"
         unless="$(eval world == 'default')"/>
    <arg name="debug"
         value="$(arg debug)"
         unless="$(eval debug == 'default')"/>
    <arg name="paused"
         value="$(arg paused)"
         unless="$(eval paused == 'default')"/>
    <arg name="verbose"
         value="$(arg verbose)"
         unless="$(eval verbose == 'default')"/>
    <arg name="show_gui"
         value="$(arg show_gui)"
         unless="$(eval show_gui == 'default')"/>
    <arg name="recording"
         value="$(arg recording)"
         unless="$(eval recording == 'default')"/>
    <arg name="use_sim_time"
         value="$(arg use_sim_time)"
         unless="$(eval use_sim_time == 'default')"/>
  </include>

  <!-- If the final robot has not been spawned, recursively call this script again. -->
  <include file="$(find ezrassor_launcher)/launch/configurable_simulation.launch"
           unless="$(eval robot_count == 1)">
    <arg name="control_methods" value="$(arg control_methods)"/>
    <arg name="robot_count" value="$(eval robot_count - 1)"/>
    <arg name="ports" value="$(arg ports)"/>
    <arg name="joysticks" value="$(arg joysticks)"/>
    <arg name="spawn_x_coords" value="$(arg spawn_x_coords)"/>
    <arg name="spawn_y_coords" value="$(arg spawn_y_coords)"/>
    <arg name="spawn_z_coords" value="$(arg spawn_z_coords)"/>
    <arg name="digsite_x_coords" value="$(arg digsite_x_coords)"/>
    <arg name="digsite_y_coords" value="$(arg digsite_y_coords)"/>
    <arg name="world" value="$(arg world)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="verbose" value="$(arg verbose)"/>
    <arg name="show_gui" value="$(arg show_gui)"/>
    <arg name="recording" value="$(arg recording)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="enable_cameras" value="$(arg enable_cameras)"/>
    <arg name="enable_real_odometry" value="$(arg enable_real_odometry)"/>
  </include>
</launch>
